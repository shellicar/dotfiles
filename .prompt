# Common tmux helper functions
__tmux_question() {
  if [ -n "$TMUX" ]; then
    printf "\033]2;?\033\\"
  fi
}

__tmux_success() {
  if [ -n "$TMUX" ]; then
    printf "\033]2;O\033\\"
  fi
}

__tmux_failure() {
  if [ -n "$TMUX" ]; then
    printf "\033]2;X\033\\"
  fi
}

# Function to determine if we're running in zsh
__is_zsh() {
  [ -n "$ZSH_VERSION" ]
}

# Function to set up zsh prompt hooks
__setup_zsh_hooks() {
  autoload -Uz add-zsh-hook
  add-zsh-hook precmd __prompt_command
  add-zsh-hook preexec __tmux_question
}

# Function to set up bash prompt hooks
__setup_bash_hooks() {
  PROMPT_COMMAND=__prompt_command
  trap '__tmux_question' DEBUG
}

# Universal prompt command that works in both shells
__prompt_command() {
  local EXIT="$?"  # This needs to be first
  
  if __is_zsh; then
    # ZSH prompt formatting
    local RCol="%f"
    local Red="%F{red}"
    local Gre="%F{green}"
    local BYel="%F{yellow}"
    local BBlu="%F{blue}"
    local Pur="%F{magenta}"
    
    local user_part="%n"
    local host_part="%m"
    local dir_part="%1~"
    
    if [ $EXIT != 0 ]; then
      __tmux_failure
      PROMPT="${Red}${user_part}${RCol}@${BBlu}${host_part} ${Pur}${dir_part}${BYel}$ ${RCol}"
    else
      __tmux_success
      PROMPT="${Gre}${user_part}${RCol}@${BBlu}${host_part} ${Pur}${dir_part}${BYel}$ ${RCol}"
    fi
  else
    # Bash prompt formatting
    local RCol='\[\e[0m\]'
    local Red='\[\e[0;31m\]'
    local Gre='\[\e[0;32m\]'
    local BYel='\[\e[1;33m\]'
    local BBlu='\[\e[1;34m\]'
    local Pur='\[\e[0;35m\]'
    
    PS1=""
    
    if [ $EXIT != 0 ]; then
      PS1+="${Red}\u${RCol}"  # Add red if exit code non 0
      __tmux_failure
    else
      PS1+="${Gre}\u${RCol}"
      __tmux_success
    fi
    
    PS1+="${RCol}@${BBlu}\h ${Pur}\W${BYel}$ ${RCol}"
  fi
}

# Set up the appropriate hooks based on shell
if __is_zsh; then
  __setup_zsh_hooks
else
  __setup_bash_hooks
fi